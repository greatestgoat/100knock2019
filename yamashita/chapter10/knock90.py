from sklearn.externals import joblib
from gensim.models import word2vec
import logging
from pprint import pprint


def knock86_89(wv):
    print(f'result knock86\n{wv["United_States"]}')

    print(f'result knock87')
    print(wv.similarity('United_States', 'U.S'))

    print('result knock88')
    pprint(wv.most_similar('England'))

    print('result knock89')
    pprint(wv.most_similar(positive=['Spain', 'Athens'], negative=['Madrid']))


def main():
    logging.basicConfig(
        format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO)
    sentences = word2vec.LineSentence('../chapter9/result_knock81.txt')
    model = word2vec.Word2Vec(sentences, size=100, min_count=1)
    model.wv.save('knock90.model')

    knock86_89(model.wv)


if __name__ == '__main__':
    main()


# result knock86
# [-1.4743645  -1.5265034  -1.2004682  -1.6451131  -2.187092   -0.1024871
#  -0.18803987 -0.34434393 -0.53720427 -0.59210324 -0.50071657  0.68325114
#   0.4396017   1.4642376   0.65464723 -0.81924254  0.2113059  -1.430128
#  -1.1280571  -1.0459658  -0.70313704 -1.4575585   1.6034856  -1.3661933
#   0.6479069   1.3398896  -2.09559     1.0565729   3.3270862  -1.292179
#  -0.11621927  1.4739408  -0.59717685  0.5814687  -0.891103   -1.9260458
#   0.00347889  0.5640182  -0.46038994  1.4532814  -1.1714107   3.125779
#   0.7842661   0.73934984  0.17418195  0.01459135  2.0138426   1.2783921
#   0.8495303   0.90492666  1.4486884  -0.3097695  -1.882234    1.5943009
#  -0.87921226  0.92481536  0.7241654  -1.8382643   0.6408247  -1.2473817
#  -1.6489928   1.1547699  -0.52612406  1.7333605  -2.2130353  -1.1931192
#   0.19952329  2.380682   -0.5421193  -3.193208   -2.348439   -0.2584755
#  -2.3269053  -1.4242145  -0.878389   -1.3740195   1.6923289   0.45964766
#  -1.2264062   0.37372032 -2.175626   -2.6588554  -2.3496914  -1.4756283
#   0.76902884 -1.6812185   2.1393464   1.9289031  -1.7840135   0.71466285
#  -1.6007425  -0.28558928  0.63170063 -0.60126555  0.8888904  -1.4649765
#   1.4510474   1.9565325   0.41181523  0.8103795 ]
# result knock87
# 0.8960217
# result knock88
# 2019-07-02 15:51:11,736 : INFO : precomputing L2-norms of word weight vectors
# [('Scotland', 0.8108503818511963),
#  ('Wales', 0.7778353095054626),
#  ('Britain', 0.6791008710861206),
#  ('Sweden', 0.6479898691177368),
#  ('Ireland', 0.643175482749939),
#  ('London', 0.6274855136871338),
#  ('Spain', 0.6195432543754578),
#  ('Germany', 0.6163132190704346),
#  ('Liverpool', 0.6145128607749939),
#  ('Italy', 0.6119669675827026)]
# result knock89
# [('Rome', 0.7648060917854309),
#  ('Egypt', 0.7596035599708557),
#  ('Austria', 0.7486830949783325),
#  ('Greece', 0.7477869987487793),
#  ('Poland', 0.7450233697891235),
#  ('Russia', 0.7407796382904053),
#  ('Syria', 0.737825870513916),
#  ('Italy', 0.7365255355834961),
#  ('Denmark', 0.7351830005645752),
#  ('Portugal', 0.7313776612281799)]
